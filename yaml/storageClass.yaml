## storageClass.yaml

apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: mongo-storage
  annotations: 
    # 해당 StorageClass를 default로 설정하려고 할 때 
    storageclass.kubernetes.io/is-default-class: "true"
    # 해당 StorageClass default 해제
    # storageclass.kubernetes.io/is-default-class: false
# Local Cluster에서 동작시키기 때문에 no-provisioner로 설정
# !!Provisioner가 없기 때문에, pvc가 필요로 할 때마다 pv를 생성해야 함.!!
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongo-pv-0
spec:
  capacity:
    storage: 30Gi
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: mongo-storage
  local:
    path: /data/db/mongo-0
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - "612workstation" #local disk를 할당할 node의 hostname

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongo-pv-1
spec:
  capacity:
    storage: 30Gi
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: mongo-storage
  local:
    path: /data/db/mongo-1
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - "612workstation" #local disk를 할당할 node의 hostname

--- 
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongo-pv-2
spec:
  capacity:
    storage: 30Gi
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: mongo-storage
  local:
    path: /data/db/mongo-2
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - "612workstation" #local disk를 할당할 node의 hostname