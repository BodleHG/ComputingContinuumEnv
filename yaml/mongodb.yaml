## mongodb.yaml
---
## 외부 노출용 Service
apiVersion: v1
kind: Service
metadata:
  name: mongo-svc-exp
  namespace: mongodb-replica
spec:
  type: NodePort
  selector:
    app: mongo
    # mongo-0만 노출시 작성
    statefulset.kubernetes.io/pod-name: mongo-0
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
      nodePort: 32017

---
# StatefulSet용 Service
apiVersion: v1
kind: Service
metadata:
  name: mongo
  namespace: mongodb-replica
  labels:
    app: mongo
spec:
  ports:
  - port: 27017
    targetPort: 27017
    name: mongo
  clusterIP: None
  selector:
    app: mongo
---

# 데이터베이스이기 때문에 StatefulSet으로 배포
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
  namespace: mongodb-replica
spec:
  serviceName: mongo
  replicas: 3
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
        environment: test
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: mongo
          image: mongo:latest
          command:
            - "numactl"
            - "--interleave=all"
            - "mongod"
            - "--bind_ip"
            - "0.0.0.0"
            - "--replSet"
            - "MainRepSet"
            - "--auth"
            - "--clusterAuthMode"
            - "keyFile"
            - "--keyFile"
            - "/etc/secrets-volume/internal-auth-mongodb-keyfile"
            - "--setParameter"
            - "authenticationMechanisms=SCRAM-SHA-1"
          resources:
            requests:
              cpu: 0.2
              memory: 200Mi
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: secrets-volume
              readOnly: true
              mountPath: /etc/secrets-volume
            - name: mongo-persistent-storage
              mountPath: /data/db
        # k8s 환경에서 MongoDB를 구성할 때 필요한 유틸성 컨테이너
        - name: mongo-sidecar
          image: cvallance/mongo-k8s-sidecar
          env: 
            - name: MONGO_SIDECAR_POD_LABELS
              value: "app=mongo,environment=test"
      # Control Plane Node에는 배치가 되지 않도록 수정
      # nodeSelector:
      #   node-role.kubernetes.io/control-plane: : "false"
      volumes:
        - name: secrets-volume
          secret:
            secretName: mongo-shared-bootstrap-data
            defaultMode: 256
  volumeClaimTemplates:
    - metadata:
        name: mongo-persistent-storage
      spec:
        # storageClass 명시
        storageClassName: "mongo-storage"
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 30Gi